/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.github.rholder:gradle-one-jar:1.0.4'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.0.0'
    }
}


plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    
    id 'java'
    
    id 'eclipse'
    
    id 'application'
    
    id 'project-report'
}

apply plugin: 'gradle-one-jar'
apply plugin: 'com.github.johnrengelman.shadow'


repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}


dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:26.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.16'
    runtime "mysql:mysql-connector-java:8.0.16"
        
    compile 'org.mindrot:jbcrypt:0.4'
    
    compile 'com.jfoenix:jfoenix:9.0.8'  
    
    compile 'org.hibernate:hibernate-core:5.4.2.Final'    
    compile 'org.hibernate:hibernate-entitymanager:5.4.2.Final'
   	compile 'org.hibernate:hibernate-osgi:5.4.2.Final'
    
    compile 'com.google.api-client:google-api-client:1.28.0'
    compile 'com.google.api-client:google-api-client-java6:1.28.0'
    compile 'com.google.api-client:google-api-client-servlet:1.28.0'
    compile 'com.google.oauth-client:google-oauth-client-jetty:1.28.0'
    compile 'com.google.oauth-client:google-oauth-client-java6:1.28.0'
    compile 'com.google.apis:google-api-services-gmail:v1-rev103-1.25.0'
    compile 'com.google.apis:google-api-services-oauth2:v2-rev150-1.25.0'
    compile 'com.google.http-client:google-http-client-jackson2:1.29.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.8'    
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
   	compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.8'    
   	compile group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.13'
    compile group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: '2.9.8'
}


configurations.all {
    exclude group: 'org.jboss.spec.javax.transaction', module: 'jboss-transaction-api_1.2_spec'
}


task awesomeFunJar(type: OneJar) {
    mainClass = 'com.github.rholder.awesome.MyAwesomeMain'
}


eclipse.classpath.file {
  withXml {
    xml ->
    def node = xml.asNode()
    node.classpathentry.forEach {
      if (it.@kind == 'lib') {
        def sourcePath = it.@path.replace('.jar', '-sources.jar')
        if (file(sourcePath).exists()) {
          it.@sourcepath = sourcePath
        }
      }
    }
  }
}


ext.moduleName = 'Planner' 
mainClassName = 'home.LogIn'

jar {
    from (configurations.compile.collect { it.isDirectory() ? it : zipTree(it) })

    manifest {
        attributes 'Main-Class': 'home.LogIn'
    }
}